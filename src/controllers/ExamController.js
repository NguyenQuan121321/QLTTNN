const db = require('../config/database');

/**
 * üìã L·∫•y danh s√°ch t·∫•t c·∫£ k·ª≥ thi
 */
exports.getAllExams = async (req, res) => {
  try {
    const exams = await db('Exam')
      .select('Exam.id', 'Exam.tenKyThi', 'Exam.ngayThi', 'LopHoc.tenLop')
      .leftJoin('LopHoc', 'Exam.lopHocId', 'LopHoc.id');

    res.json({ success: true, data: exams });
  } catch (err) {
    console.error('‚ùå L·ªói getAllExams:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y danh s√°ch k·ª≥ thi' });
  }
};

/**
 * üîç L·∫•y chi ti·∫øt 1 k·ª≥ thi
 */
exports.getExamById = async (req, res) => {
  try {
    const { id } = req.params;
    const exam = await db('Exam')
      .leftJoin('LopHoc', 'Exam.lopHocId', 'LopHoc.id')
      .select('Exam.*', 'LopHoc.tenLop')
      .where('Exam.id', id)
      .first();

    if (!exam)
      return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y k·ª≥ thi' });

    res.json({ success: true, data: exam });
  } catch (err) {
    console.error('‚ùå L·ªói getExamById:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y th√¥ng tin k·ª≥ thi' });
  }
};

/**
 * ‚ûï Th√™m m·ªõi k·ª≥ thi
 */
exports.createExam = async (req, res) => {
  try {
    const { lopHocId, tenKyThi, ngayThi } = req.body;

    if (!lopHocId || !tenKyThi || !ngayThi)
      return res.status(400).json({ success: false, message: 'Thi·∫øu d·ªØ li·ªáu b·∫Øt bu·ªôc' });

    // Ki·ªÉm tra l·ªõp h·ªçc c√≥ t·ªìn t·∫°i kh√¥ng
    const lop = await db('LopHoc').where({ id: lopHocId }).first();
    if (!lop)
      return res.status(400).json({ success: false, message: `L·ªõp h·ªçc v·ªõi ID ${lopHocId} kh√¥ng t·ªìn t·∫°i` });

    const [newExamId] = await db('Exam').insert({
      lopHocId,
      tenKyThi,
      ngayThi
    });

    res.status(201).json({
      success: true,
      message: 'T·∫°o k·ª≥ thi th√†nh c√¥ng',
      id: newExamId
    });
  } catch (err) {
    console.error('‚ùå L·ªói createExam:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi t·∫°o k·ª≥ thi' });
  }
};

/**
 * ‚úèÔ∏è C·∫≠p nh·∫≠t k·ª≥ thi
 */
exports.updateExam = async (req, res) => {
  try {
    const { id } = req.params;
    const { lopHocId, tenKyThi, ngayThi } = req.body;

    const updated = await db('Exam').where({ id }).update({
      lopHocId,
      tenKyThi,
      ngayThi
    });

    if (!updated)
      return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y k·ª≥ thi ƒë·ªÉ c·∫≠p nh·∫≠t' });

    res.json({ success: true, message: 'C·∫≠p nh·∫≠t k·ª≥ thi th√†nh c√¥ng' });
  } catch (err) {
    console.error('‚ùå L·ªói updateExam:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi c·∫≠p nh·∫≠t k·ª≥ thi' });
  }
};

/**
 * üóëÔ∏è X√≥a k·ª≥ thi
 */
exports.deleteExam = async (req, res) => {
  try {
    const { id } = req.params;
    const deleted = await db('Exam').where({ id }).del();

    if (!deleted)
      return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y k·ª≥ thi ƒë·ªÉ x√≥a' });

    res.json({ success: true, message: 'X√≥a k·ª≥ thi th√†nh c√¥ng' });
  } catch (err) {
    console.error('‚ùå L·ªói deleteExam:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi x√≥a k·ª≥ thi' });
  }
};