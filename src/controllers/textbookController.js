// (M·ªöI) G·ªçi Model
const textbookModel = require('../models/textbookModel');
// (Optional) G·ªçi subjectModel ƒë·ªÉ ki·ªÉm tra m√¥n h·ªçc t·ªìn t·∫°i
const subjectModel = require('../models/subjectModel');

/**
 * üìã L·∫•y t·∫•t c·∫£ gi√°o tr√¨nh
 */
exports.getAllTextbooks = async (req, res) => {
  try {
    const textbooks = await textbookModel.findAll();
    res.json({ success: true, data: textbooks });
  } catch (err) {
    console.error('‚ùå L·ªói getAllTextbooks:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y gi√°o tr√¨nh' });
  }
};

/**
 * üîç L·∫•y gi√°o tr√¨nh theo ID
 */
exports.getTextbookById = async (req, res) => {
  try {
    const { id } = req.params;
    const textbook = await textbookModel.findById(id);
    if (!textbook) return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y gi√°o tr√¨nh' });
    res.json({ success: true, data: textbook });
  } catch (err) {
    console.error('‚ùå L·ªói getTextbookById:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y gi√°o tr√¨nh' });
  }
};

/**
 * ‚ûï T·∫°o gi√°o tr√¨nh
 */
exports.createTextbook = async (req, res) => {
  try {
     // (Optional) Ki·ªÉm tra m√¥n h·ªçc t·ªìn t·∫°i tr∆∞·ªõc khi g·ªçi model
     const { monHocId } = req.body;
     if (monHocId) {
        const subject = await subjectModel.findById(monHocId);
        if (!subject) {
            return res.status(400).json({ success: false, message: `M√¥n h·ªçc v·ªõi m√£ ${monHocId} kh√¥ng t·ªìn t·∫°i` });
        }
     }

    await textbookModel.create(req.body);
    res.status(201).json({ success: true, message: 'T·∫°o gi√°o tr√¨nh th√†nh c√¥ng' });
  } catch (err) {
    console.error('‚ùå L·ªói createTextbook:', err);
    if (err.message.includes('l√† b·∫Øt bu·ªôc')) { // L·ªói validation t·ª´ Model
        return res.status(400).json({ success: false, message: err.message });
    }
    res.status(500).json({ success: false, message: 'L·ªói server khi t·∫°o gi√°o tr√¨nh' });
  }
};

/**
 * ‚úèÔ∏è C·∫≠p nh·∫≠t gi√°o tr√¨nh
 */
exports.updateTextbook = async (req, res) => {
  try {
    const { id } = req.params;
    const updated = await textbookModel.update(id, req.body);
    if (!updated) return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y gi√°o tr√¨nh ƒë·ªÉ c·∫≠p nh·∫≠t' });
    res.json({ success: true, message: 'C·∫≠p nh·∫≠t gi√°o tr√¨nh th√†nh c√¥ng' });
  } catch (err) {
    console.error('‚ùå L·ªói updateTextbook:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi c·∫≠p nh·∫≠t gi√°o tr√¨nh' });
  }
};

/**
 * üóëÔ∏è X√≥a gi√°o tr√¨nh
 */
exports.deleteTextbook = async (req, res) => {
  try {
    const { id } = req.params;
    const deleted = await textbookModel.remove(id);
    if (!deleted) return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y gi√°o tr√¨nh ƒë·ªÉ x√≥a' });
    res.json({ success: true, message: 'X√≥a gi√°o tr√¨nh th√†nh c√¥ng' });
  } catch (err) {
    console.error('‚ùå L·ªói deleteTextbook:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi x√≥a gi√°o tr√¨nh' });
  }
};