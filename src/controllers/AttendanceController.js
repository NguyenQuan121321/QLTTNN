// (M·ªöI) G·ªçi Model
const attendanceModel = require('../models/attendanceModel');

/**
 * ‚úçÔ∏è Ghi nh·∫≠n ƒëi·ªÉm danh
 */
exports.recordAttendance = async (req, res) => {
  try {
    const attendanceData = {
        ...req.body,
        giaoVienId: req.user.id // L·∫•y ID gi√°o vi√™n t·ª´ token ƒë√£ x√°c th·ª±c
    };
    
    // TODO: Validate input data (lopHocId, hocVienId exist?)

    await attendanceModel.create(attendanceData);

    res.status(201).json({ success: true, message: 'ƒêi·ªÉm danh th√†nh c√¥ng' });
  } catch (err) {
    console.error('‚ùå L·ªói recordAttendance:', err);
     // if (err.message.includes('ƒë√£ ƒë∆∞·ª£c ƒëi·ªÉm danh')) { // X·ª≠ l√Ω l·ªói duplicate t·ª´ Model
     //   return res.status(400).json({ success: false, message: err.message });
     // }
    res.status(500).json({ success: false, message: 'L·ªói server khi ƒëi·ªÉm danh' });
  }
};

/**
 * üìä L·∫•y l·ªãch s·ª≠ ƒëi·ªÉm danh c·ªßa 1 l·ªõp
 */
exports.getAttendanceByClass = async (req, res) => {
  try {
    const { lopHocId } = req.params;
    const records = await attendanceModel.findByClass(lopHocId);
    res.json({ success: true, data: records });
  } catch (err) {
     console.error('‚ùå L·ªói getAttendanceByClass:', err); // Th√™m log l·ªói chi ti·∫øt
     res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y l·ªãch s·ª≠ ƒëi·ªÉm danh' });
  }
};

/**
 * ‚ö†Ô∏è (US Admin) L·∫•y tr·∫°ng th√°i chuy√™n c·∫ßn (C·∫£nh b√°o/C·∫•m thi)
 */
exports.getAttendanceStatus = async (req, res) => {
  try {
    const { lopHocId, hocVienId } = req.params;

    // "Nh·ªù" Model ƒë·∫øm s·ªë bu·ªïi ngh·ªâ
    const result = await attendanceModel.countUnexcusedAbsences(lopHocId, hocVienId);
    const totalAbsences = result.totalAbsences || 0;

    // Controller x·ª≠ l√Ω logic nghi·ªáp v·ª• (c·∫£nh b√°o/c·∫•m thi)
    let status = 'OK';
    let message = `H·ªçc vi√™n v·∫Øng ${totalAbsences} bu·ªïi (kh√¥ng ph√©p).`;

    if (totalAbsences >= 3) {
      status = 'BANNED'; // C·∫•m thi
      message = `C·∫§M THI: H·ªçc vi√™n v·∫Øng ${totalAbsences} bu·ªïi (kh√¥ng ph√©p).`;
    } else if (totalAbsences >= 2) {
      status = 'WARNING'; // C·∫£nh b√°o
      message = `C·∫¢NH B√ÅO: H·ªçc vi√™n v·∫Øng ${totalAbsences} bu·ªïi (kh√¥ng ph√©p).`;
    }

    // Controller tr·∫£ v·ªÅ k·∫øt qu·∫£
    res.json({
      success: true,
      data: {
        hocVienId: parseInt(hocVienId, 10), // ƒê·∫£m b·∫£o tr·∫£ v·ªÅ s·ªë
        lopHocId: parseInt(lopHocId, 10),   // ƒê·∫£m b·∫£o tr·∫£ v·ªÅ s·ªë
        totalAbsences,
        status,
        message
      }
    });
  } catch (err) {
    console.error('‚ùå L·ªói getAttendanceStatus:', err);
    res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y tr·∫°ng th√°i chuy√™n c·∫ßn' });
  }
};