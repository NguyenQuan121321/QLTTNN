// (M·ªöI) G·ªçi Model
const subjectModel = require("../models/subjectModel");

/**
 * üìã L·∫•y t·∫•t c·∫£ m√¥n h·ªçc
 */
exports.getAllSubjects = async (req, res) => {
  try {
    const subjects = await subjectModel.findAll();
    res.json({ success: true, data: subjects });
  } catch (err) {
    console.error('‚ùå L·ªói getAllSubjects:', err);
    res.status(500).json({ success: false, message: "L·ªói server khi l·∫•y m√¥n h·ªçc" });
  }
};

/**
 * üîç L·∫•y m√¥n h·ªçc theo m√£ m√¥n h·ªçc
 */
exports.getSubjectById = async (req, res) => {
  try {
    const { id } = req.params; // 'id' l√† 'maMonHoc' t·ª´ route
    const subject = await subjectModel.findById(id);
    if (!subject) return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y m√¥n h·ªçc" });
    res.json({ success: true, data: subject });
  } catch (err) {
    console.error('‚ùå L·ªói getSubjectById:', err);
    res.status(500).json({ success: false, message: "L·ªói server khi l·∫•y m√¥n h·ªçc" });
  }
};

/**
 * ‚ûï T·∫°o m√¥n h·ªçc
 */
exports.createSubject = async (req, res) => {
  try {
    await subjectModel.create(req.body);
    res.status(201).json({ success: true, message: "T·∫°o m√¥n h·ªçc th√†nh c√¥ng" });
  } catch (err) {
    console.error('‚ùå L·ªói createSubject:', err);
    if (err.message.includes('l√† b·∫Øt bu·ªôc')) { // L·ªói validation t·ª´ Model
        return res.status(400).json({ success: false, message: err.message });
    }
    if (err.code === 'ER_DUP_ENTRY') { // L·ªói tr√πng m√£ m√¥n
       return res.status(400).json({ success: false, message: `M√£ m√¥n h·ªçc '${req.body.maMonHoc}' ƒë√£ t·ªìn t·∫°i.` });
    }
    res.status(500).json({ success: false, message: "L·ªói server khi t·∫°o m√¥n h·ªçc" });
  }
};

/**
 * ‚úèÔ∏è C·∫≠p nh·∫≠t m√¥n h·ªçc
 */
exports.updateSubject = async (req, res) => {
  try {
    const { id } = req.params; // 'id' l√† 'maMonHoc'
    const updated = await subjectModel.update(id, req.body);
    if (!updated) return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y m√¥n h·ªçc ƒë·ªÉ c·∫≠p nh·∫≠t" });
    res.json({ success: true, message: "C·∫≠p nh·∫≠t m√¥n h·ªçc th√†nh c√¥ng" });
  } catch (err) {
    console.error('‚ùå L·ªói updateSubject:', err);
    res.status(500).json({ success: false, message: "L·ªói server khi c·∫≠p nh·∫≠t m√¥n h·ªçc" });
  }
};

/**
 * üóëÔ∏è X√≥a m√¥n h·ªçc
 */
exports.deleteSubject = async (req, res) => {
  try {
    const { id } = req.params; // 'id' l√† 'maMonHoc'
    await subjectModel.remove(id);
    res.json({ success: true, message: "X√≥a m√¥n h·ªçc th√†nh c√¥ng" });
  } catch (err) {
    console.error('‚ùå L·ªói deleteSubject:', err);
    if (err.message.includes('Kh√¥ng th·ªÉ x√≥a m√¥n h·ªçc')) { // L·ªói r√†ng bu·ªôc t·ª´ Model
        return res.status(400).json({ success: false, message: err.message });
    }
    res.status(500).json({ success: false, message: "L·ªói server khi x√≥a m√¥n h·ªçc" });
  }
};