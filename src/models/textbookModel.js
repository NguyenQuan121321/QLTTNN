const db = require('../config/database'); //

/**
 * üìã L·∫•y t·∫•t c·∫£ gi√°o tr√¨nh (Join v·ªõi M√¥n h·ªçc)
 */
const findAll = () => {
  return db('GiaoTrinh') //
    .leftJoin('MonHoc', 'GiaoTrinh.monHocId', 'MonHoc.maMonHoc') //
    .select('GiaoTrinh.*', 'MonHoc.tenMonHoc');
};

/**
 * üîç L·∫•y gi√°o tr√¨nh theo ID
 */
const findById = (id) => {
  return db('GiaoTrinh').where('id', id).first(); //
};

/**
 * ‚ûï T·∫°o m·ªõi gi√°o tr√¨nh
 */
const create = (textbookData) => {
  const { monHocId, tenGiaoTrinh, tacGia, namXB, moTa } = textbookData;
   if (!monHocId || !tenGiaoTrinh) {
       throw new Error('M√£ m√¥n h·ªçc v√† T√™n gi√°o tr√¨nh l√† b·∫Øt bu·ªôc.');
   }
  return db('GiaoTrinh').insert({ monHocId, tenGiaoTrinh, tacGia, namXB, moTa }); //
};

/**
 * ‚úèÔ∏è C·∫≠p nh·∫≠t gi√°o tr√¨nh
 */
const update = (id, textbookData) => {
  const { monHocId, tenGiaoTrinh, tacGia, namXB, moTa } = textbookData;
  const updateData = {};
  if (monHocId) updateData.monHocId = monHocId;
  if (tenGiaoTrinh) updateData.tenGiaoTrinh = tenGiaoTrinh;
  if (tacGia !== undefined) updateData.tacGia = tacGia;
  if (namXB) updateData.namXB = namXB;
  if (moTa !== undefined) updateData.moTa = moTa;

  return db('GiaoTrinh').where('id', id).update(updateData); //
};

/**
 * üóëÔ∏è X√≥a gi√°o tr√¨nh
 */
const remove = (id) => {
  // Gi√°o tr√¨nh th∆∞·ªùng kh√¥ng c√≥ r√†ng bu·ªôc ph·ª©c t·∫°p, c√≥ th·ªÉ x√≥a tr·ª±c ti·∫øp
  return db('GiaoTrinh').where('id', id).del(); //
};

module.exports = {
  findAll,
  findById,
  create,
  update,
  remove
};