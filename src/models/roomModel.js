const db = require('../config/database'); //

/**
 * üìã L·∫•y t·∫•t c·∫£ ph√≤ng h·ªçc
 */
const findAll = () => {
  return db('PhongHoc').select('*'); //
};

/**
 * üîç L·∫•y ph√≤ng h·ªçc theo m√£ ph√≤ng (maPhong)
 */
const findById = (maPhong) => {
  return db('PhongHoc').where('maPhong', maPhong).first(); //
};

/**
 * ‚ûï T·∫°o m·ªõi ph√≤ng h·ªçc
 */
const create = (roomData) => {
  const { maPhong, tenPhong, sucChua, moTa } = roomData;
  // C√≥ th·ªÉ th√™m validation ·ªü ƒë√¢y n·∫øu c·∫ßn
  return db('PhongHoc').insert({ maPhong, tenPhong, sucChua, moTa }); //
};

/**
 * ‚úèÔ∏è C·∫≠p nh·∫≠t ph√≤ng h·ªçc
 */
const update = (maPhong, roomData) => {
  const { tenPhong, sucChua, moTa } = roomData;
  // T·∫°o object update ƒë·ªông
  const updateData = {};
  if (tenPhong) updateData.tenPhong = tenPhong;
  if (sucChua) updateData.sucChua = sucChua;
  if (moTa !== undefined) updateData.moTa = moTa; // Cho ph√©p c·∫≠p nh·∫≠t m√¥ t·∫£ th√†nh r·ªóng

  return db('PhongHoc').where('maPhong', maPhong).update(updateData); //
};

/**
 * üóëÔ∏è X√≥a ph√≤ng h·ªçc
 */
const remove = async (maPhong) => {
   // (M·ªöI) Ki·ªÉm tra r√†ng bu·ªôc kh√≥a ngo·∫°i tr∆∞·ªõc khi x√≥a
   const lopUsingRoom = await db('LopHoc').where('phongHocId', maPhong).first(); //
   if (lopUsingRoom) {
       throw new Error(`Kh√¥ng th·ªÉ x√≥a ph√≤ng '${maPhong}' v√¨ ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng b·ªüi l·ªõp '${lopUsingRoom.tenLop}' (ID: ${lopUsingRoom.id}).`);
   }
   return db('PhongHoc').where('maPhong', maPhong).del(); //
};

module.exports = {
  findAll,
  findById,
  create,
  update,
  remove
};